bot.on('messageReactionAdd', async (reaction, user) => {
  
    const handleStarboard = async () => {
        const starboard = bot.channels.cache.find(channel => channel.name.toLowerCase() === '『🌟』starboard');
        const msgs = await starboard.messages.fetch({ limit: 100 });
        const image = reaction.message.attachments.first() ? reaction.message.attachments.first().proxyURL : null


        const existingMsg = msgs.find(msg => 
            msg.embeds.length === 1 ?
            (msg.embeds[0].footer.text.startsWith(reaction.message.id) ? true : false) : false);
        if(existingMsg) existingMsg.edit(`${reaction.count} 🌟  <#${reaction.message.channel.id}>`);
        else {
            const embed = new Discord.MessageEmbed()
                .setAuthor(reaction.message.author.tag, reaction.message.author.displayAvatarURL())
                .addField('Source', `[Jump!](${reaction.message.url})`)
                .setDescription(reaction.message.content)
                .setFooter(reaction.message.id ) //new Date(reaction.message.createdTimestamp)
                .setTimestamp()
            
           
            if(starboard)
 if(reaction.message.image)embed.setImage(reaction.message.image)
                starboard.send(`3 🌟  <#${reaction.message.channel.id}>`, embed);
        }
    }
    if(reaction.emoji.name === '🌟') {
         let limit = 3; // number of reaction needed to come in starboard
  if (reaction.emoji.name == '🌟' && reaction.count >= limit) {
   
    
        if(reaction.message.channel.name.toLowerCase() === '『🌟』starboard') return;
        if(reaction.message.partial) {
            await reaction.fetch();
            await reaction.message.fetch();
            handleStarboard();
        }
        else
            handleStarboard();
    }}
});

bot.on('messageReactionRemove', async (reaction, user) => {
    const handleStarboard = async () => {
        const starboard = bot.channels.cache.find(channel => channel.name.toLowerCase() === '『🌟』starboard');
        const msgs = await starboard.messages.fetch({ limit: 100 });
        const existingMsg = msgs.find(msg => 
            msg.embeds.length === 1 ? 
            (msg.embeds[0].footer.text.startsWith(reaction.message.id) ? true : false) : false);
        if(existingMsg) {
            if(reaction.count === 0)
                existingMsg.delete({ timeout: 2500 });
            else
                existingMsg.edit(`${reaction.count} 🌟  <#${reaction.message.channel.id}>`)
        };
    }
    if(reaction.emoji.name === '🌟') {
        if(reaction.message.channel.name.toLowerCase() === '『🌟』starboard') return;
        if(reaction.message.partial) {
            await reaction.fetch();
            await reaction.message.fetch();
            handleStarboard();
        }
        else
            handleStarboard();
    }
});
